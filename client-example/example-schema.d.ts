/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	'/api/page': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: operations['getApiPage'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: operations['getApi'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/infobae': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: operations['getApiInfobae'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/text': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: operations['postApiText'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/form-test': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: operations['postApiForm-test'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/formd-test': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: operations['postApiFormd-test'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/file': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: operations['postApiFile'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/json': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: operations['postApiJson'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/hello/{name}/{name2}': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: operations['getApiHelloByNameByName2'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/x/{param1}/x/{param2}': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: operations['getApiXByParam1XByParam2'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/hello': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: operations['getApiHello'];
		put?: never;
		/** @description Sarasa */
		post: operations['postApiHello'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/api/text-body': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get?: never;
		put?: never;
		post: operations['postApiText-body'];
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/app2': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: operations['getApp2'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/app3': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: operations['getApp3'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
	'/': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		get: operations['get'];
		put?: never;
		post?: never;
		delete?: never;
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: never;
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
	getApiPage: {
		parameters: {
			query?: {
				page?: number;
				pageSize?: number;
			};
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	getApi: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	getApiInfobae: {
		parameters: {
			query: {
				a: string;
			};
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	postApiText: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** @description POST /api/text Body */
		requestBody: {
			content: {
				'application/json': {
					content: string;
					date: unknown;
					j: unknown[];
				};
			};
		};
		responses: {
			/** @description 200 Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': {
						date: unknown;
					};
				};
			};
		};
	};
	'postApiForm-test': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** @description POST /api/form-test Body */
		requestBody: {
			content: {
				'application/x-www-form-urlencoded': {
					a: string;
					b: string;
					c: string;
				};
			};
		};
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	'postApiFormd-test': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	postApiFile: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** @description POST /api/file Body */
		requestBody: {
			content: {
				'multipart/form-data': {
					/** Format: binary */
					file: string;
				};
			};
		};
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	postApiJson: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** @description POST /api/json Body */
		requestBody: {
			content: {
				'application/json': {
					hello: string;
				};
			};
		};
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	getApiHelloByNameByName2: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				/**
				 * @description sarasa description
				 * @example sarasa example
				 */
				name: string;
				/** @example name2-example */
				name2: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description 200 Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					/** @example Text example */
					'application/json': string;
				};
			};
		};
	};
	getApiXByParam1XByParam2: {
		parameters: {
			query?: never;
			header?: never;
			path: {
				/** @example param1-example */
				param1: string;
				/** @example param2-example */
				param2: string;
			};
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	getApiHello: {
		parameters: {
			query: {
				/** @example Elias */
				name: string;
				/** @example other */
				other?: string;
			};
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description 200 Response */
			200: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					/** @example {
					 *       "first": 999
					 *     } */
					'application/json': {
						first: number;
					};
				};
			};
			/** @description 400 Response */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': {
						message: string;
						status: number;
					};
				};
			};
			/** @description 500 Response */
			500: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					'application/json': {
						message: string;
						status: number;
					};
				};
			};
		};
	};
	postApiHello: {
		parameters: {
			query?: never;
			header: {
				name: string;
			};
			path?: never;
			cookie?: never;
		};
		/** @description POST /api/hello Body */
		requestBody: {
			content: {
				'multipart/form-data': {
					name: string;
				};
			};
		};
		responses: {
			/** @description 400 Response */
			400: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					/** @example {
					 *       "status": 400,
					 *       "message": "Invalid {part}",
					 *       "fields": {
					 *         "name": [
					 *           "validation error 1",
					 *           "validation error 2"
					 *         ]
					 *       }
					 *     } */
					'application/json': {
						status: number;
						message: string;
						fields: {
							name?: string[];
						};
					};
				};
			};
			/** @description 403 Response */
			403: {
				headers: {
					[name: string]: unknown;
				};
				content: {
					/** @example {
					 *       "status": 403,
					 *       "message": "Error message"
					 *     } */
					'application/json': {
						status: number;
						message: string;
						fields: unknown;
					};
				};
			};
		};
	};
	'postApiText-body': {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/** @description POST /api/text-body Body */
		requestBody: {
			content: {
				'text/plain': {
					text: string;
				};
			};
		};
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	getApp2: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	getApp3: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
	get: {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		requestBody?: never;
		responses: {
			/** @description Unknown */
			default: {
				headers: {
					[name: string]: unknown;
				};
				content?: never;
			};
		};
	};
}
